		SOLVED
-[discovered 7/12/17] When obtaining the jar, if you go to another screen and then to another one, the jar appears again. The inventory screen also shows things you haven't obtained yet [solved 7/12/17 - When loading attributes to the map in WRAM, it was using Y, which corresponds to the index of the whole screen structure, when it should have been using X for the index of the attribute map. This was causing it to store the data past the attribute map to the item area, and corrupting which items had been obtained, as well as numerous other things like the count of the items]
-[discovered 7/12/17] When leaving screen 13 downward for screen 23, an extra metatile on the first row is drawn. Is this an underlying issue with the metatile drawing routine? Debug and find out [solved 7/13/17 - For some reason, metatile_repeat was at 1 when this screen was first being loaded, resulting in the first byte getting repeated once. I made the routine clear this variable at the start. IDK why it wasn't getting cleared on its own, but I'm too lazy to try and find out right now. If there are ever any other weird issues with the metatile loading routine, investigate this further.
-[discovered 11/14/17] - Since adding the sound engine, I've discovered that sometimes (I haven't isolated it yet, but it seems to be more likely when going to and from the inventory screen) the playfield can get messed up with glitched metatiles (Usually it's at the bottom), which cause the game to crash when colliding with them. The top attributes also get corrupted. Also, if you spam left+right when going back and forth to a screen, you can cause the playfield to completely glitch out with garbage tile data, and occasionally cause the game to crash. My best guess is that this has something to do with reading code/data from a wrong bank, but any bankswitching I added with the music engine seems to be okay. [solved 11/15/17 - The sound engine uses its own temp variables so that there's no need to worry about them getting clobbered during NMI (I do use the same 4 temp vars between subroutines, but I've been careful so far to make sure none get overwritten, and as far as I know I haven't ran into any issues), but I was accidentally using the regular temp variables in one of the sound engine's subroutines, which was then corrupting the loadscreen routine (which takes several frames) so that's why everything was getting messed up in a weird inconsistent way]
-[discovered (accidentally made) 4/25/2018] After incorporating samples into the sound engine, the game now freezes briefly before loading screens. [seemed to fix itself shortly after. I don't know if it was the emulator glitching out for some strange reason, or maybe a deeply-layered game-breaking bug that'll be impossible to ever find the cause of. Hopefully the former, but if it ever happens again start investigating.]
-[discovered 7/11/17] When leaving a screen, if you're close enough to the border, instead of going to the next screen like normal, you can either be blocked by solid metatiles on the other side, or wrap around to the other side [partially solved 10/17/2017 - Moved the code that checks if the boundary's been crossed to in between updating x/y and storing it. Seems to be fixed for moving right, but still occasionally glitches out when moving down]
	[Seems to only really happen when the player goes down and spawns on the jar. Think it might be that the player leaves the screen, and sets the game state to be changed to start loading the new screen, but then when the jar's code is run, it collides with the player whose coordinates wrapped around, and so it then sets the game state to be changed to drawing a message. Maybe in the loop that runs each ent, check if the state has been changed to loading a new screen, and break out if it has. Thoroughly check the logic of this though.] [solved around a week before 5/18/2018. The Play state stops processing ents if the game state has been changed, as the jar code would overwrite the loading screen state by going to the drawing message state]
-[discovered 5/1/18] Once the player runs out of rounds, switches to the knife, but then switches back to the gun, it still draws the knife sprite. [solved 5/4/18 - Ent slot 1 was getting activated as soon as the player pressed B. I moved this right before SpawnWeaponEntBasedOnPlayer, and it now works correctly. If the player's out of rounds, the gun ent will be activated but not the weapon slot.]
-[discovered 6/4/18] - When the player pauses while a BGM sample is playing, its stream position gets ahead, and will then be off with the rest of the song after unpausing. See if this could possibly be fixed by adding the two accompaniment tracks to the jungle song, otherwise investigate further. [Solved a few hours after. Forgot to silence the DMC channel in the pause state init code]
-[discovered 5/18/18] - When returning from some screens (I saw it when returning to (5,5)), after destroying brush, there will be some incorrect metatiles. Step through ReloadMetaTiles as this bug seems to be predictable. [solved 6/7/18 - The wrong temp variable was being used, temp1 instead of temp0.]
-[discovered 7/14/17] - On the screen (1,0) you can accidentally break the game by going to the top of the sand and putting your head past the boundary, going to a screen which hasn't been defined. Try messing with the player's BGcol hitbox or making the top exit boundary one pixel higher. This technically isn't an unsolved issue, I know how to fix it I just haven't gotten around to it yet. [Solved, but I forgot to put exactly when. The exit boundary of the screen was made 8 pixels higher, so this issue is fixed.]
-[Discovered 7/22/18] - The game crashes when the player attacks poison snakes. [Solved 7/24/2018 - Collision handling for poisonous snakes had not been implemented, so the game would crash whenever a poisonous snake touched something solid]
-[Discovered 7/22/18] - Sometimes when the player throws a counted weapon like a spear when there are none left, the sprites will glitch causing the game to basically crash (Sometimes it'll just flat-out crash entirely). Seems to happen whenever the player tries to use it while walking. [Solved 7/24/2018 - Animation variables weren't getting reset, so the player could be at a frame of attacking that didn't exist, wreaking havoc on the sprites]
-[Discovered 7/25/18] - The game will crash with the player gets a game over. It goes to the game over state ok, but the scroll is all fucked and it goes to the BREAK handler. [Solved 7/26/2018 - Simple problem with stack push / pops in the DeleteFile macro.]
-[Discovered 8/4/18] - Sometimes (Happened in screen (2,4)) a poison snake will move down across the screen weirdly, seems to have spawned in a solid spot. Check spawn points for this screen. [Solved 8/9/18 - I'd forgotten to define what terrain poisonous snakes are on in the fixed bank]
-[Discovered 10/24/18] - When entering a cave and then leaving it, the player will spawn in a garbage screen and cause the game to crash when he tries to move and collide with the background. I don't know if this has to do with the cave being dark or not. Comment out the code to make the cave dark and see if it still happens. [Solved 11/1/18 - The screen data pointer wasn't getting properly initialized when a dark cave was loaded.]
-[Discovered 3/20/20] - when a stick or cloth is added to the craft queue, and then clearing the queue or exiting the menu increases the count of cloth. When this happens, and then a tourniquet is crafted, it won't display it in the recipe list. Check and see if this happens with other items.
	-Only seems to happen when you get new cloth, but saving and resetting causes the glitch to not happen anymore
	[Solved 3/2/020] - The ClearCraftQueue loop was checking A instead of X in some spots, and not re-loading X when it should have been, basically causing incorrect item count writes to overflow until eventually cloth was set to 1 higher than it should have been.
-[Discovered 3/22/20] - When attacking snakes, the sprites will sometimes break. Happens after the explosion state I need to re-write snake AI anyway, so if the glitch persists after doing that I'll look into it further (Since this hasn't happened with any other state machine-based enemies). [Solved a few hours later] - After coding the beehive and bee AI, bees can be spawned with different states, and so state now needs to be set manually before calling InitEnt. A lot of code isn't doing this (yet), so when an enemy drops an item it can potentially be in a state it's not programmed for, causing garbage sprites to be loaded and drawn.


		UNSOLVED
-[discovered 11/15/17] - Sound effects sometimes play the last note of the last sound effect that played (I think it only happens for a frame though). I have no idea why this happens to be perfectly honest.
-[Known about for a while, but documented 11/28/2017] - When going to a new screen, any enemies that were left on the previous screen will appear on the new screen for a frame. I think this has something to do with the OAM buffer not being cleared. [Fixed about two minutes later. Added a call to ClearOAM in LoadScreen and it solved that problem, but there's still the issue of ents being invisible for the first frame of a new screen. I feel like it's only noticeable if you already know it's there. See if it's worth trying to fix (It might actually be several frames, so maybe look into it more)]
-[Discovered 6/11/18] - The game will sometimes crash (not go to the break handler, but the screen'll turn black and it'll execute garbage code) at the end of area fadeout transitions. I forgot to save the breakpoint I added, but if it happens again, keep track of where. It's probably just the wrong bank being switched in.
-[Discovered 7/10/18] - Bats seem to not always go back to perching where they spawned.
-[Discovered 8/9/18] - Sometimes when going up from the screen with the jar, the crabs will still have the jar palette. Seems to happen after the jar has been collected, but can also happen when going back to a previously visited screen. LOOK INTO THIS.
-[Discovered 8/9/18] - When going to the screen with the jar on it, and then returning, the jar will sometimes be gone. This seems to suggest that special items aren't saved by the previous screen system, or that the code to load special items isn't executed if the screen's been previously visited.
	-Also when returning to the jar screen after leaving a screen with a messed up palette, sprites would then degenerate. I don't know why this happens either.
	-Actually, the jar does get spawned when returning normally, so I have no idea what is causing all 
	-[Update 11/17/18] - Seems to happen for screens with collectibles on them in general. Very hard to replicate it seems.
	-[Update 3/26/20] - The jar disappearing and re-appearing seems to be fairly reproducable. Seems to have to do with the previous screen system's collectable item respawn code. I still don't know the culprit of the palettes being wrong yet though.
-[Discovered 3/25/20] - In the version of FCEUX I'm using (2.2.3), the cursor is still sometimes visible on the status board. Apparent in Mesen as well, so it's clearly stuff I need to fix
	-There's a screen on the shore with incorrect attributes
	-When trying to eat honeycomb, it says it's out of the item and then decreases the count
	-When leaving a screen of swarming bees and then returning, the bees won't be swarming anymore
		-Probably need to add a beehive check to the previous screen system, which shouldn't be hard since it's just one variable.
	-The tiles on the first line, above the status board, seem to get drawn on the second screen. Not a huge deal since that part won't be shown on NTSC screens, but might be worth looking into.
	-The machete when facing down isn't properly aligned horizontally.
	-The player doesn't flicker when walking into thornbushes
	-The very top left screen of the island doesn't seem to be defined properly
	-Becoming poisoned by a snake doesn't seem to do anything if you're already infected
	-Crabs on one of the shore screens below the jungle entrance seem to have bad spawn points, as they seem to clip through the trees sometimes
